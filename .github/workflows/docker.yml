name: docker-ocr-service

on:

  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
    
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: ${{ matrix.runner }}
    
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            runner: ubuntu-24.04
          - platform: arm64
            runner: ubuntu-24.04-arm

    env:
      working-directory: ./

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: checkout repo
        uses: actions/checkout@v5
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cogstacksystems/cogstack-ocr-service:latest
      
      - name: Get and Set Release Version (strip 'v' prefix from tags)
        id: release_version
        shell: bash
        run: |
          raw="${GITHUB_REF_NAME}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            if [[ "$raw" =~ ^v[0-9] ]]; then
              VERSION="${raw:1}"
            else
              VERSION="$raw"
            fi
          elif [[ "$GITHUB_REF" == refs/heads/* ]]; then
            VERSION="$raw"
          else
            VERSION="latest"
          fi
          if [[ "$VERSION" == "main" ]]; then
            VERSION="latest"
          fi
          echo "RELEASE_VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "release_version=$VERSION" >> "$GITHUB_OUTPUT"
             
      - name: Print computed version
        run: echo "RELEASE_VERSION=${RELEASE_VERSION}"
             
      - name: set docker release tag name (release)
        id: set_release_version
        if: ${{ github.ref != 'refs/heads/main' }}
        run: echo "RELEASE_VERSION=${RELEASE_VERSION#?}" >> $GITHUB_ENV

      - name: set docker release tag name (latest)
        id: set_release_version_latest
        if: ${{ github.ref == 'refs/heads/main' }}
        run: echo "RELEASE_VERSION=latest" >> $GITHUB_ENV

      - name: set CPU architecture
        id: set_cpu_architecture
        run: echo "CPU_ARCHITECTURE=${{ matrix.platform }}" >> $GITHUB_ENV

      - name: Build and push Docker OCR Service image
        id: docker_build
        run: |
          docker build --platform linux/${{ matrix.platform }} -t cogstacksystems/cogstack-ocr-service:$RELEASE_VERSION-${{ matrix.platform }} -f Dockerfile --build-arg CPU_ARCHITECTURE=${{ matrix.platform }} .
          docker push cogstacksystems/cogstack-ocr-service:$RELEASE_VERSION-${{ matrix.platform }}
          echo "::set-output name=digest::$(docker images --digests --format '{{.Digest}}' cogstacksystems/cogstack-ocr-service | head -n 1)" >> $GITHUB_OUTPUT
  
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
